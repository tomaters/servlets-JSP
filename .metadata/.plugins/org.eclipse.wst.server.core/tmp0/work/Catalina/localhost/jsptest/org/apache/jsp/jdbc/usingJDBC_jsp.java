/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.16
 * Generated at: 2023-12-01 06:17:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jdbc;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.SQLException;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Connection;

public final class usingJDBC_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

Class.forName("oracle.jdbc.driver.OracleDriver");
Connection connection = null;
Statement statement = null;
ResultSet resultSet = null;
String id = "", passwd = "", name = "", mem_num1 = "", mem_num2 = "", e_mail = "", phone = "", zipcode = "",
		address = "", job = "";
int counter = 0;
try {
	connection = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "hr", "hr");
	statement = connection.createStatement();
	resultSet = statement.executeQuery("SELECT * FROM TEMPMEMBER");

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>JSP-DB connection</title>\r\n");
      out.write("<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"#FFFFCC\">\r\n");
      out.write("	<h2>Connect to DB using JSP scriptlets</h2>\r\n");
      out.write("	<br></br>\r\n");
      out.write("	\r\n");
      out.write("	<h3>User info</h3>\r\n");
      out.write("	<table bordercolor=\"#0000ff\" border=\"1\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td><strong>ID</strong></td>\r\n");
      out.write("			<td><strong>PASSWD</strong></td>\r\n");
      out.write("			<td><strong>NAME</strong></td>\r\n");
      out.write("			<td><strong>MEM_NUM1</strong></td>\r\n");
      out.write("			<td><strong>MEM_NUM2</strong></td>\r\n");
      out.write("			<td><strong>E_MAIL</strong></td>\r\n");
      out.write("			<td><strong>PHONE</strong></td>\r\n");
      out.write("			<td><strong>ZIPCODE/ADDRESS</strong></td>\r\n");
      out.write("			<td><strong>JOB</strong></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		");

		if (resultSet != null) {
			while (resultSet.next()) {
				id = resultSet.getString("id");
				passwd = resultSet.getString("passwd");
				name = resultSet.getString("name");
				mem_num1 = resultSet.getString("mem_num1");
				mem_num2 = resultSet.getString("mem_num2");
				e_mail = resultSet.getString("e_mail");
				phone = resultSet.getString("phone");
				zipcode = resultSet.getString("zipcode");
				address = resultSet.getString("address");
				job = resultSet.getString("job");
		
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>");
      out.print(id);
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(passwd);
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(name);
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(mem_num1);
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(mem_num2);
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(e_mail);
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(phone);
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(zipcode);
      out.write('/');
      out.print(address);
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(job);
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("			");

			counter++;
			} //end while
		} //end if
			
      out.write("\r\n");
      out.write("		\r\n");
      out.write("	</table>\r\n");
      out.write("	<br></br> total records :\r\n");
      out.write("	");
      out.print(counter);
      out.write('\r');
      out.write('\n');
      out.write('	');

	} catch (SQLException sqlException) {
	System.out.println("sql exception");
	} catch (Exception exception) {
	System.out.println("exception");
	} finally {
	if (resultSet != null)
		try {
			resultSet.close();
		} catch (SQLException ex) {
		}
	if (statement != null)
		try {
			statement.close();
		} catch (SQLException ex) {
		}
	if (connection != null)
		try {
			connection.close();
		} catch (Exception ex) {
		}
	}
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
